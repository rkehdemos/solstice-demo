{"version":3,"sources":["header.js","customer-profile.js","account-table.js","customer-table.js","index.js"],"names":["Header","props","Pane","height","background","paddingTop","display","justifyContent","borderBottom","Text","CustomerProfile","SideSheet","isShown","onCloseComplete","closeProfile","customerName","customerEmail","Table","Head","TextHeaderCell","Body","accounts","map","account","Row","key","customer_name","TextCell","id","address","solar_farm_id","isNumber","capacity_share","created_date","AccountTable","CustomerTable","customers","customer","isSelectable","onSelect","onRowSelect","first_name","last_name","active","email","App","state","error","loading","customerAccountMap","currentCustomerID","currentTab","isDrawerOpen","fetch","then","response","json","data","setState","catch","e","this","length","didLoadWithoutErrors","Tablist","marginTop","marginRight","flexBasis","border","Tab","isSelected","aria-controls","width","size","Card","closeDrawer","undefined","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6a9ead8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Pane, Text} from 'evergreen-ui';\r\n\r\nconst Header = props => (\r\n\t<Pane height={100} background=\"tint2\"> \r\n\t\t<Pane paddingTop={80} display=\"flex\" justifyContent=\"space-between\" borderBottom=\"default\" >\r\n\t\t\t<Text>Home</Text>\r\n\t\t\t<Text>Lorem</Text>\r\n\t\t\t<Text>Ipsum</Text>\r\n\t\t\t<Text>Dolor</Text>\r\n\t\t\t<Text>Sit</Text>\r\n\t\t\t<Text>Amet</Text>\r\n\t\t</Pane>\r\n\t</Pane>\r\n)\r\n\r\nexport default Header;","import React, {Fragment} from 'react';\r\nimport {SideSheet, Pane, Text, Table} from 'evergreen-ui';\r\n\r\nconst CustomerProfile = props => (\r\n  <>\r\n    <SideSheet\r\n      isShown={props.isShown}\r\n      onCloseComplete={props.closeProfile}\r\n    >\r\n      <Pane>\r\n        <Pane justifyContent=\"center\">\r\n          <Text>{props.customerName}</Text>\r\n          <Text>{props.customerEmail}</Text>\r\n        </Pane>\r\n        <Table height={700}>\r\n        <Table.Head>\r\n          <Table.TextHeaderCell>\r\n            Customer\r\n          </Table.TextHeaderCell>\r\n          <Table.TextHeaderCell>\r\n            Address\r\n          </Table.TextHeaderCell>\r\n          <Table.TextHeaderCell>\r\n            Solar Farm\r\n          </Table.TextHeaderCell>\r\n          <Table.TextHeaderCell>\r\n            Capacity\r\n          </Table.TextHeaderCell>\r\n          <Table.TextHeaderCell>\r\n            Date Created\r\n          </Table.TextHeaderCell>\r\n        </Table.Head>\r\n        <Table.Body height={500}>\r\n          {props.accounts.map(account => (\r\n            <Table.Row key={`${props.customer_name}_profile_account_{account.id}`}>\r\n                <Table.TextCell>{account.id}</Table.TextCell>\r\n                <Table.TextCell>{account.address}</Table.TextCell>\r\n                <Table.TextCell>{account.solar_farm_id}</Table.TextCell>\r\n                <Table.TextCell isNumber>{account.capacity_share}</Table.TextCell>\r\n                <Table.TextCell>{account.created_date}</Table.TextCell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </Pane>\r\n    </SideSheet>\r\n  </>\r\n)\r\n\r\nexport default CustomerProfile","import React from 'react';\r\nimport {Pane, Card, Table} from 'evergreen-ui';\r\n\r\nconst AccountTable = props => (\r\n  <Table height={700}>\r\n    <Table.Head>\r\n      <Table.TextHeaderCell>\r\n        Customer\r\n      </Table.TextHeaderCell>\r\n      <Table.TextHeaderCell>\r\n        Address\r\n      </Table.TextHeaderCell>\r\n      <Table.TextHeaderCell>\r\n        Solar Farm\r\n      </Table.TextHeaderCell>\r\n      <Table.TextHeaderCell>\r\n        Capacity\r\n      </Table.TextHeaderCell>\r\n      <Table.TextHeaderCell>\r\n        Date Created\r\n      </Table.TextHeaderCell>\r\n    </Table.Head>\r\n    <Table.Body height={500}>\r\n      {props.accounts.map(account => (\r\n        <Table.Row key={`account_{account.id}`}>\r\n            <Table.TextCell>{account.id}</Table.TextCell>\r\n            <Table.TextCell>{account.address}</Table.TextCell>\r\n            <Table.TextCell>{account.solar_farm_id}</Table.TextCell>\r\n            <Table.TextCell isNumber>{account.capacity_share}</Table.TextCell>\r\n            <Table.TextCell>{account.created_date}</Table.TextCell>\r\n        </Table.Row>\r\n      ))}\r\n    </Table.Body>\r\n  </Table>\r\n)\r\n\r\nexport default AccountTable;","import React from 'react';\r\nimport {Pane, Card, Table} from 'evergreen-ui';\r\n\r\nconst CustomerTable = props => (\r\n\t<Pane >\r\n\t\t<Table height={700} >\r\n\t\t  <Table.Head>\r\n\t\t    <Table.TextHeaderCell>\r\n\t\t      First Name\r\n\t\t    </Table.TextHeaderCell>\r\n\t\t    <Table.TextHeaderCell>\r\n\t\t      Last Name\r\n\t\t    </Table.TextHeaderCell>\r\n\t\t    <Table.TextHeaderCell>\r\n\t\t      Active?\r\n\t\t    </Table.TextHeaderCell>\r\n\t\t    <Table.TextHeaderCell>\r\n\t\t      Email\r\n\t\t    </Table.TextHeaderCell>\r\n\t\t    <Table.TextHeaderCell>\r\n\t\t      Date Created\r\n\t\t    </Table.TextHeaderCell>\r\n\t\t  </Table.Head>\r\n\t\t  <Table.Body height={500}>\r\n\t\t    {props.customers.map(customer => (\r\n\t\t      <Table.Row key={customer.id} isSelectable onSelect={props.onRowSelect(customer.id)}>\r\n\t\t        <Table.TextCell>{customer.first_name}</Table.TextCell>\r\n\t\t        <Table.TextCell>{customer.last_name}</Table.TextCell>\r\n\t\t        <Table.TextCell>{customer.active === 1 ? 'yes' : 'no'}</Table.TextCell>\r\n\t\t        <Table.TextCell>{customer.email}</Table.TextCell>\r\n\t\t        <Table.TextCell>{customer.created_date}</Table.TextCell>\r\n\t\t      </Table.Row>\r\n\t\t    ))}\r\n\t\t  </Table.Body>\r\n\t\t</Table>\r\n\t</Pane>\r\n)\r\n\r\nexport default CustomerTable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Pane, Tablist, Tab, Card } from 'evergreen-ui';\r\nimport Header from './header';\r\nimport CustomerProfile from './customer-profile';\r\nimport AccountTable from './account-table';\r\nimport CustomerTable from './customer-table';\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t    \terror: '',\r\n\t\t\tloading: true,\r\n\t\t\taccounts: null,\r\n\t\t\tcustomers: null,\r\n\t\t\tcustomerAccountMap: null,\r\n\t\t\tcurrentCustomerID: null,\r\n\t\t\tcurrentTab: 'Customers',\r\n\t\t\tisDrawerOpen: false\r\n\t\t}\r\n    }\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tfetch('/loadPage')\r\n\t\t.then(response => {\r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tconst {customers = [], accounts = [], customerAccountMap = []} = data;\r\n\t\t\t\tthis.setState({customers, accounts, customerAccountMap, loading: false});\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t\tthis.setState({loading:false, error: e})\r\n\t\t})\r\n\t}\r\n\r\n\tdidLoadWithoutErrors() {\r\n\t\treturn !this.state.loading && this.state.error.length < 1;\r\n\t}\r\n\r\n\topenDrawer(id) {\r\n\t\tthis.setState({isDrawerOpen: true, currentCustomerID: id});\r\n\t}\r\n\r\n\tcloseDrawer() {\r\n\t\tthis.setState({isDrawerOpen: false, currentCustomerID: null});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Pane>\r\n\t\t\t\t<Header />\r\n\t\t\t\t{this.state.loading && (\r\n\t\t\t\t\t<p>Please wait while we load data...</p>\r\n\t\t\t\t)}\r\n\t\t\t\t{this.didLoadWithoutErrors() && (\r\n\t\t\t\t\t<Tablist marginTop={50} marginRight={50} display=\"flex\" flexBasis={500}>\r\n\t\t\t\t\t\t<Pane background=\"tint2\" border=\"default\">\r\n\t\t\t\t            <Tab\r\n\t\t\t\t\t            key=\"customer_tab\"\r\n\t\t\t\t\t            onSelect={() => this.setState({currentTab: 'Customers'})}\r\n\t\t\t\t\t            isSelected={this.state.currentTab === 'Customers'}\r\n\t\t\t\t\t            aria-controls=\"panel-customers\"\r\n\t\t\t\t\t            width={500}\r\n\t\t\t\t\t            size={50}>\r\n\t\t\t\t\t              Customer List\r\n\t\t\t\t            </Tab>\r\n\t\t\t            </Pane>\r\n\t\t\t            <Pane background=\"tint2\" border=\"default\">\r\n\t\t\t\t            <Tab\r\n\t\t\t\t            \tkey=\"accounts_tab\"\r\n\t\t\t\t\t            onSelect={() => this.setState({currentTab: 'Accounts'})}\r\n\t\t\t\t\t            isSelected={this.state.currentTab === 'Accounts'}\r\n\t\t\t\t\t            aria-controls=\"panel-accounts\"\r\n\t\t\t\t\t            width={500}\r\n\t\t\t\t\t            size={50}> \r\n\t\t\t\t            \t<Card>Account List</Card>\r\n\t\t\t\t            </Tab>\r\n\t\t\t            </Pane>\r\n\t\t\t        </Tablist>\r\n\t\t\t    )}\r\n\t\t        {(this.didLoadWithoutErrors() && this.state.currentTab === 'Customers') && (\r\n\t\t        \t<CustomerTable customers={this.state.customers} />\r\n\t\t        )}\r\n\t\t        {(this.didLoadWithoutErrors() && this.state.currentTab === 'Accounts') && (\r\n\t\t        \t<AccountTable accounts={this.state.accounts}/>\r\n\t\t        )}\r\n\t\t        <CustomerProfile \r\n\t\t        \tisShown={this.state.isDrawerOpen} \r\n\t\t        \tcloseProfile={this.closeDrawer} \r\n\t\t        \taccounts={this.state.customers[this.state.currentCustomerID]}\r\n\t\t        \tcustomerName={this.state.customers[this.state.currentCustomerID--] !== undefined ? \r\n\t\t        \t\t\t\t\t`${this.state.customers[this.state.currentCustomerID--].first_name} ${this.state.customers[this.state.currentCustomerID--].last_name}` : \r\n\t\t        \t\t\t\t\t''\r\n\t\t        \t}\r\n\t\t        \tcustomerEmail={this.state.customers[this.state.currentCustomerID--] !== undefined ? \r\n\t\t        \t\t\t\t\tthis.state.customers[this.state.currentCustomerID--].email :\r\n\t\t        \t\t\t\t\t''\r\n\t\t        \t}\r\n\t\t        />\r\n\t\t    </Pane>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}